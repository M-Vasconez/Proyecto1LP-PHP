
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADDITION ADVANCE_PAGE AND ARGUMENTO BOOLEAN BOOLEAN_AND BOOLEAN_OR CLOSE_TAG COLON COMILLA_DOBLE CONCAT_EQUAL DIVISION ECHO ELSE ENDLINE EQUAL ESCAPE EXPONENTIATION FGETS FLOAT FOR FSCANF FUNCTION IDENTITY IF INTEGER IS_EQUAL IS_GREATER IS_GREATER_OR_EQUAL IS_NOT_EQUAL IS_SMALLER IS_SMALLER_OR_EQUAL LBRACKET LKEY LPAREN MODULO MULTIPLICATION NEGATION NEW NOT NULL OPEN_TAG OPERADOR_CONCATENACION OPERADOR_DECREMENTO OPERADOR_INCREMENTO OR PLUS_EQUAL PRINT PUSH RBRACKET READLINE RKEY RPAREN SETSIZE SINTAXIS_ARRAY SPLEDOUBLYLINKEDLIST SPLFIXEDARRAY STRING SUBTRACTION TAB_VERTICAL VARIABLE WHILE WHITESPACE XORcuerpo : salida \n  | asignacion \n  | funcion\n  | estructuras_control\n  | buclessalida : ECHO valor ENDLINEsalida : PRINT LPAREN valor RPARENvalor : ARGUMENTO \n  | INTEGER \n  | FLOAT \n  | BOOLEAN\n  | STRING\n  | VARIABLEfuncion : FUNCTION ARGUMENTO LPAREN VARIABLE RPAREN LKEY ARGUMENTO RKEYasignacion : VARIABLE operador_asignacion valor ENDLINEoperador_asignacion : EQUAL\n  | PLUS_EQUAL\n  | CONCAT_EQUALestructuras_control : if\n  | elsebucles : whileif : IF LPAREN expresion_logica RPAREN LKEY cuerpo RKEY else : if ELSE LKEY cuerpo RKEYexpresion_logica : BOOLEAN\n  | valor AND valor\n  | valor OR valor\n  while : WHILE LPAREN expresion_logica RPAREN '
    
_lr_action_items = {'ECHO':([0,36,51,],[7,7,7,]),'PRINT':([0,36,51,],[8,8,8,]),'VARIABLE':([0,7,23,24,25,26,27,30,31,35,36,46,47,51,],[9,22,22,22,-16,-17,-18,22,22,43,9,22,22,9,]),'FUNCTION':([0,36,51,],[10,10,10,]),'IF':([0,36,51,],[14,14,14,]),'WHILE':([0,36,51,],[15,15,15,]),'$end':([1,2,3,4,5,6,11,12,13,32,41,42,48,50,57,58,],[0,-1,-2,-3,-4,-5,-19,-20,-21,-6,-7,-15,-27,-23,-22,-14,]),'RKEY':([2,3,4,5,6,11,12,13,32,41,42,44,48,50,55,56,57,58,],[-1,-2,-3,-4,-5,-19,-20,-21,-6,-7,-15,50,-27,-23,57,58,-22,-14,]),'ARGUMENTO':([7,10,23,24,25,26,27,30,31,46,47,54,],[17,28,17,17,-16,-17,-18,17,17,17,17,56,]),'INTEGER':([7,23,24,25,26,27,30,31,46,47,],[18,18,18,-16,-17,-18,18,18,18,18,]),'FLOAT':([7,23,24,25,26,27,30,31,46,47,],[19,19,19,-16,-17,-18,19,19,19,19,]),'BOOLEAN':([7,23,24,25,26,27,30,31,46,47,],[20,20,20,-16,-17,-18,38,38,20,20,]),'STRING':([7,23,24,25,26,27,30,31,46,47,],[21,21,21,-16,-17,-18,21,21,21,21,]),'LPAREN':([8,14,15,28,],[23,30,31,35,]),'EQUAL':([9,],[25,]),'PLUS_EQUAL':([9,],[26,]),'CONCAT_EQUAL':([9,],[27,]),'ELSE':([11,57,],[29,-22,]),'ENDLINE':([16,17,18,19,20,21,22,34,],[32,-8,-9,-10,-11,-12,-13,42,]),'RPAREN':([17,18,19,20,21,22,33,37,38,40,43,52,53,],[-8,-9,-10,-11,-12,-13,41,45,-24,48,49,-25,-26,]),'AND':([17,18,19,21,22,38,39,],[-8,-9,-10,-12,-13,-11,46,]),'OR':([17,18,19,21,22,38,39,],[-8,-9,-10,-12,-13,-11,47,]),'LKEY':([29,45,49,],[36,51,54,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuerpo':([0,36,51,],[1,44,55,]),'salida':([0,36,51,],[2,2,2,]),'asignacion':([0,36,51,],[3,3,3,]),'funcion':([0,36,51,],[4,4,4,]),'estructuras_control':([0,36,51,],[5,5,5,]),'bucles':([0,36,51,],[6,6,6,]),'if':([0,36,51,],[11,11,11,]),'else':([0,36,51,],[12,12,12,]),'while':([0,36,51,],[13,13,13,]),'valor':([7,23,24,30,31,46,47,],[16,33,34,39,39,52,53,]),'operador_asignacion':([9,],[24,]),'expresion_logica':([30,31,],[37,40,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cuerpo","S'",1,None,None,None),
  ('cuerpo -> salida','cuerpo',1,'p_cuerpo','sintacticoPrueba.py',5),
  ('cuerpo -> asignacion','cuerpo',1,'p_cuerpo','sintacticoPrueba.py',6),
  ('cuerpo -> funcion','cuerpo',1,'p_cuerpo','sintacticoPrueba.py',7),
  ('cuerpo -> estructuras_control','cuerpo',1,'p_cuerpo','sintacticoPrueba.py',8),
  ('cuerpo -> bucles','cuerpo',1,'p_cuerpo','sintacticoPrueba.py',9),
  ('salida -> ECHO valor ENDLINE','salida',3,'p_salida','sintacticoPrueba.py',12),
  ('salida -> PRINT LPAREN valor RPAREN','salida',4,'p_salida_print','sintacticoPrueba.py',15),
  ('valor -> ARGUMENTO','valor',1,'p_valor','sintacticoPrueba.py',18),
  ('valor -> INTEGER','valor',1,'p_valor','sintacticoPrueba.py',19),
  ('valor -> FLOAT','valor',1,'p_valor','sintacticoPrueba.py',20),
  ('valor -> BOOLEAN','valor',1,'p_valor','sintacticoPrueba.py',21),
  ('valor -> STRING','valor',1,'p_valor','sintacticoPrueba.py',22),
  ('valor -> VARIABLE','valor',1,'p_valor','sintacticoPrueba.py',23),
  ('funcion -> FUNCTION ARGUMENTO LPAREN VARIABLE RPAREN LKEY ARGUMENTO RKEY','funcion',8,'p_funcion','sintacticoPrueba.py',26),
  ('asignacion -> VARIABLE operador_asignacion valor ENDLINE','asignacion',4,'p_asignacion','sintacticoPrueba.py',29),
  ('operador_asignacion -> EQUAL','operador_asignacion',1,'p_operador_asignacion','sintacticoPrueba.py',32),
  ('operador_asignacion -> PLUS_EQUAL','operador_asignacion',1,'p_operador_asignacion','sintacticoPrueba.py',33),
  ('operador_asignacion -> CONCAT_EQUAL','operador_asignacion',1,'p_operador_asignacion','sintacticoPrueba.py',34),
  ('estructuras_control -> if','estructuras_control',1,'p_estructuras_control','sintacticoPrueba.py',37),
  ('estructuras_control -> else','estructuras_control',1,'p_estructuras_control','sintacticoPrueba.py',38),
  ('bucles -> while','bucles',1,'p_bucle','sintacticoPrueba.py',41),
  ('if -> IF LPAREN expresion_logica RPAREN LKEY cuerpo RKEY','if',7,'p_if','sintacticoPrueba.py',45),
  ('else -> if ELSE LKEY cuerpo RKEY','else',5,'p_else','sintacticoPrueba.py',48),
  ('expresion_logica -> BOOLEAN','expresion_logica',1,'p_expresion_logica','sintacticoPrueba.py',51),
  ('expresion_logica -> valor AND valor','expresion_logica',3,'p_expresion_logica','sintacticoPrueba.py',52),
  ('expresion_logica -> valor OR valor','expresion_logica',3,'p_expresion_logica','sintacticoPrueba.py',53),
  ('while -> WHILE LPAREN expresion_logica RPAREN','while',4,'p_while','sintacticoPrueba.py',58),
]
