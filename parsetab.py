
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADDITION ADVANCE_PAGE AND ARGUMENTO ARRAY ARROW BOOLEAN BOOLEAN_AND BOOLEAN_OR CLOSE_TAG COLON COMA COMILLA_DOBLE COMILLA_SIMPLE CONCAT_EQUAL DIVISION ECHO ELSE ENDLINE EQUAL ESCAPE EXPONENTIATION FGETS FLOAT FOPEN FOR FSCANF FUNCTION IDENTITY IF INTEGER IS_EQUAL IS_GREATER IS_GREATER_OR_EQUAL IS_NOT_EQUAL IS_SMALLER IS_SMALLER_OR_EQUAL LBRACKET LKEY LPAREN MODULO MULTIPLICATION NEGATION NEW NOT NULL OPEN_TAG OPERADOR_CONCATENACION OPERADOR_DECREMENTO OPERADOR_INCREMENTO OR PLUS_EQUAL POP PRINT PUSH RBRACKET READLINE RKEY RPAREN SETSIZE SINTAXIS_ARRAY SPLFIXEDARRAY SPLQUEUE STRING SUBTRACTION TAB_VERTICAL VARIABLE WHILE WHITESPACE XORcuerpo : salida \n  | salida cuerpo\n  | asignacion\n  | asignacion cuerpo \n  | function\n  | function cuerpo\n  | estructuras_control\n  | estructuras_control cuerpo\n  | estructuras_datos\n  | metodos\n  | metodos cuerpo\n  | abrir_archivo\n  | lectura_archivosalida : ECHO valor ENDLINEsalida : PRINT LPAREN valor RPAREN ENDLINEvalor : ARGUMENTO \n  | number \n  | BOOLEAN\n  | string\n  | VARIABLE\n  | estructuras_datos\n  | funcionesstring : STRING\n  | COMILLA_DOBLE STRING COMILLA_DOBLE\n  | COMILLA_SIMPLE STRING COMILLA_SIMPLEfunction : FUNCTION ARGUMENTO LPAREN VARIABLE RPAREN LKEY ARGUMENTO RKEYasignacion : VARIABLE operador_asignacion valor ENDLINEasignacion : VARIABLE operador_asignacion expresion ENDLINEasignacion : queue_variable operador_asignacion queue ENDLINEqueue : NEW SPLQUEUE LPAREN RPARENqueue_variable : VARIABLEasignacion : splfixedarray_variable operador_asignacion splfixedarray ENDLINEsplfixedarray : NEW SPLFIXEDARRAY LPAREN INTEGER RPARENsplfixedarray_variable : VARIABLEpush : queue_variable ARROW PUSH LPAREN valor RPAREN ENDLINEpop : queue_variable ARROW POP LPAREN RPAREN ENDLINEmetodos : push\n  | popoperador_asignacion : EQUAL\n  | PLUS_EQUAL\n  | CONCAT_EQUALestructuras_datos : array\n  | queue\n  | splfixedarrayoperador_comparacion : IS_EQUAL\n  | IS_GREATER_OR_EQUAL\n  | IS_NOT_EQUAL\n  | IS_SMALLER_OR_EQUAL\n  | IS_GREATER\n  | IS_SMALLERoperacion_comparacion : VARIABLE operador_comparacion VARIABLEestructuras_control : if\n  | else \n  | while \n  | for\n  | estructuras_controlif : IF LPAREN expresion RPAREN LKEY cuerpo RKEY else : if ELSE LKEY cuerpo RKEYexpresion : expresiones_logicas \n  | expresion_aritmetica\n  expresiones_logicas : valor\n  | valor operador expresiones_logicas\n  operador_logico : BOOLEAN_AND \n  | BOOLEAN_OR \n  | AND \n  | OR \n  | XOR \n  operador : operador_logico \n  | operador_comparacionnumber : INTEGER \n  | FLOAToperador_aritmetico : ADDITION\n  | SUBTRACTION\n  | MULTIPLICATION\n  | DIVISION\n  | MODULO\n  | EXPONENTIATION\n  expresion_aritmetica : number\n  | number operador_aritmetico expresion_aritmetica\n  abrir_archivo : FOPEN LPAREN string RPAREN\n  | FOPEN LPAREN string RPAREN ENDLINElectura_archivo : FSCANF LPAREN abrir_archivo COMA string RPAREN ENDLINE while : WHILE LPAREN valor operador_comparacion valor RPAREN COLON cuerpowhile : WHILE LPAREN valor operador_comparacion valor RPAREN LKEY TAB_VERTICAL cuerpo RKEYarray : LPAREN valorArreglo RPAREN ENDLINEvalorArreglo : valor COMA valorArreglo\n  | valorfunciones : valor LPAREN valor RPAREN LKEY cuerpo RKEYtipo_operador : ADDITION \n  | SUBTRACTION \n  | MULTIPLICATION \n  | DIVISION \n  | MODULO \n  | EXPONENTIATIONforma_operacion : VARIABLE OPERADOR_INCREMENTO \n  | OPERADOR_INCREMENTO VARIABLE \n  | VARIABLE OPERADOR_DECREMENTO \n  | OPERADOR_DECREMENTO VARIABLE \n  | VARIABLE EQUAL VARIABLE tipo_operador INTEGERfor : FOR LPAREN VARIABLE EQUAL INTEGER ENDLINE VARIABLE operador_comparacion INTEGER ENDLINE forma_operacion RPAREN LKEY cuerpo RKEY'
    
_lr_action_items = {'ECHO':([0,2,3,4,5,6,7,8,9,15,17,19,20,21,22,23,24,25,32,33,34,35,36,69,88,102,104,119,127,130,133,138,141,148,149,151,154,155,157,164,166,167,168,172,173,174,178,191,201,],[10,10,10,10,10,-9,10,-12,-13,-43,-44,-52,-53,-54,-55,-42,-37,-38,-2,-4,-6,-8,-11,-14,10,-85,-27,-28,-29,-32,-80,-30,-15,-58,-81,10,-33,10,-36,-35,-82,-57,10,-26,-83,10,-84,10,-100,]),'PRINT':([0,2,3,4,5,6,7,8,9,15,17,19,20,21,22,23,24,25,32,33,34,35,36,69,88,102,104,119,127,130,133,138,141,148,149,151,154,155,157,164,166,167,168,172,173,174,178,191,201,],[11,11,11,11,11,-9,11,-12,-13,-43,-44,-52,-53,-54,-55,-42,-37,-38,-2,-4,-6,-8,-11,-14,11,-85,-27,-28,-29,-32,-80,-30,-15,-58,-81,11,-33,11,-36,-35,-82,-57,11,-26,-83,11,-84,11,-100,]),'VARIABLE':([0,2,3,4,5,6,7,8,9,10,12,15,17,19,20,21,22,23,24,25,32,33,34,35,36,50,53,54,55,56,64,65,66,69,70,75,87,88,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,127,128,130,133,136,138,141,148,149,151,154,155,157,162,164,166,167,168,172,173,174,178,179,182,183,186,191,201,],[13,13,13,13,13,-9,13,-12,-13,42,42,-43,-44,-52,-53,-54,-55,-42,-37,-38,-2,-4,-6,-8,-11,42,42,-39,-40,-41,42,42,95,-14,42,42,131,13,-85,-27,42,-68,-69,-63,-64,-65,-66,-67,-45,-46,-47,-48,-49,-50,-28,-29,42,-32,-80,42,-30,-15,-58,-81,13,-33,13,-36,170,-35,-82,-57,13,-26,-83,13,-84,180,188,189,190,13,-100,]),'FUNCTION':([0,2,3,4,5,6,7,8,9,15,17,19,20,21,22,23,24,25,32,33,34,35,36,69,88,102,104,119,127,130,133,138,141,148,149,151,154,155,157,164,166,167,168,172,173,174,178,191,201,],[18,18,18,18,18,-9,18,-12,-13,-43,-44,-52,-53,-54,-55,-42,-37,-38,-2,-4,-6,-8,-11,-14,18,-85,-27,-28,-29,-32,-80,-30,-15,-58,-81,18,-33,18,-36,-35,-82,-57,18,-26,-83,18,-84,18,-100,]),'FOPEN':([0,2,3,4,5,6,7,8,9,15,17,19,20,21,22,23,24,25,32,33,34,35,36,63,69,88,102,104,119,127,130,133,138,141,148,149,151,154,155,157,164,166,167,168,172,173,174,178,191,201,],[26,26,26,26,26,-9,26,-12,-13,-43,-44,-52,-53,-54,-55,-42,-37,-38,-2,-4,-6,-8,-11,26,-14,26,-85,-27,-28,-29,-32,-80,-30,-15,-58,-81,26,-33,26,-36,-35,-82,-57,26,-26,-83,26,-84,26,-100,]),'FSCANF':([0,2,3,4,5,6,7,8,9,15,17,19,20,21,22,23,24,25,32,33,34,35,36,69,88,102,104,119,127,130,133,138,141,148,149,151,154,155,157,164,166,167,168,172,173,174,178,191,201,],[27,27,27,27,27,-9,27,-12,-13,-43,-44,-52,-53,-54,-55,-42,-37,-38,-2,-4,-6,-8,-11,-14,27,-85,-27,-28,-29,-32,-80,-30,-15,-58,-81,27,-33,27,-36,-35,-82,-57,27,-26,-83,27,-84,27,-100,]),'IF':([0,2,3,4,5,6,7,8,9,15,17,19,20,21,22,23,24,25,32,33,34,35,36,69,88,102,104,119,127,130,133,138,141,148,149,151,154,155,157,164,166,167,168,172,173,174,178,191,201,],[28,28,28,28,28,-9,28,-12,-13,-43,-44,-52,-53,-54,-55,-42,-37,-38,-2,-4,-6,-8,-11,-14,28,-85,-27,-28,-29,-32,-80,-30,-15,-58,-81,28,-33,28,-36,-35,-82,-57,28,-26,-83,28,-84,28,-100,]),'WHILE':([0,2,3,4,5,6,7,8,9,15,17,19,20,21,22,23,24,25,32,33,34,35,36,69,88,102,104,119,127,130,133,138,141,148,149,151,154,155,157,164,166,167,168,172,173,174,178,191,201,],[29,29,29,29,29,-9,29,-12,-13,-43,-44,-52,-53,-54,-55,-42,-37,-38,-2,-4,-6,-8,-11,-14,29,-85,-27,-28,-29,-32,-80,-30,-15,-58,-81,29,-33,29,-36,-35,-82,-57,29,-26,-83,29,-84,29,-100,]),'FOR':([0,2,3,4,5,6,7,8,9,15,17,19,20,21,22,23,24,25,32,33,34,35,36,69,88,102,104,119,127,130,133,138,141,148,149,151,154,155,157,164,166,167,168,172,173,174,178,191,201,],[30,30,30,30,30,-9,30,-12,-13,-43,-44,-52,-53,-54,-55,-42,-37,-38,-2,-4,-6,-8,-11,-14,30,-85,-27,-28,-29,-32,-80,-30,-15,-58,-81,30,-33,30,-36,-35,-82,-57,30,-26,-83,30,-84,30,-100,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,15,17,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,50,52,53,54,55,56,60,64,65,67,68,69,70,73,75,76,78,83,84,88,92,93,94,98,99,100,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,127,128,130,133,136,138,141,145,148,149,151,152,154,155,157,164,166,167,168,171,172,173,174,178,191,201,],[12,12,12,12,12,-9,12,-12,-13,12,50,12,-43,-44,-52,-53,-54,-55,-42,-37,-38,62,63,64,65,66,-2,-4,-6,-8,-11,70,-16,-17,-18,-19,-20,-21,-22,-70,-71,-23,12,70,12,-39,-40,-41,87,12,12,96,97,-14,12,70,12,70,-17,128,129,12,70,-17,70,70,-24,-25,-85,-27,12,-68,-69,-63,-64,-65,-66,-67,-45,-46,-47,-48,-49,-50,-28,-29,12,-32,-80,12,-30,-15,70,-58,-81,12,70,-33,12,-36,-35,-82,-57,12,-88,-26,-83,12,-84,12,-100,]),'NEW':([0,2,3,4,5,6,7,8,9,10,12,15,17,19,20,21,22,23,24,25,32,33,34,35,36,50,53,54,55,56,57,59,64,65,69,70,75,88,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,127,128,130,133,136,138,141,148,149,151,154,155,157,164,166,167,168,172,173,174,178,191,201,],[31,31,31,31,31,-9,31,-12,-13,31,31,-43,-44,-52,-53,-54,-55,-42,-37,-38,-2,-4,-6,-8,-11,31,31,-39,-40,-41,82,86,31,31,-14,31,31,31,-85,-27,31,-68,-69,-63,-64,-65,-66,-67,-45,-46,-47,-48,-49,-50,-28,-29,31,-32,-80,31,-30,-15,-58,-81,31,-33,31,-36,-35,-82,-57,31,-26,-83,31,-84,31,-100,]),'$end':([1,2,3,4,5,6,7,8,9,15,17,19,20,21,22,23,24,25,32,33,34,35,36,69,102,104,119,127,130,133,138,141,148,149,154,157,164,166,167,172,173,178,201,],[0,-1,-3,-5,-7,-9,-10,-12,-13,-43,-44,-52,-53,-54,-55,-42,-37,-38,-2,-4,-6,-8,-11,-14,-85,-27,-28,-29,-32,-80,-30,-15,-58,-81,-33,-36,-35,-82,-57,-26,-83,-84,-100,]),'RKEY':([2,3,4,5,6,7,8,9,15,17,19,20,21,22,23,24,25,32,33,34,35,36,69,102,104,119,127,130,132,133,138,141,148,149,154,157,160,163,164,165,166,167,172,173,176,178,199,201,],[-1,-3,-5,-7,-9,-10,-12,-13,-43,-44,-52,-53,-54,-55,-42,-37,-38,-2,-4,-6,-8,-11,-14,-85,-27,-28,-29,-32,148,-80,-30,-15,-58,-81,-33,-36,167,171,-35,172,-82,-57,-26,-83,178,-84,201,-100,]),'ARGUMENTO':([10,12,18,50,53,54,55,56,64,65,70,75,105,106,107,108,109,110,111,112,113,114,115,116,117,118,128,136,158,],[38,38,60,38,38,-39,-40,-41,38,38,38,38,38,-68,-69,-63,-64,-65,-66,-67,-45,-46,-47,-48,-49,-50,38,38,165,]),'BOOLEAN':([10,12,50,53,54,55,56,64,65,70,75,105,106,107,108,109,110,111,112,113,114,115,116,117,118,128,136,],[40,40,40,40,-39,-40,-41,40,40,40,40,40,-68,-69,-63,-64,-65,-66,-67,-45,-46,-47,-48,-49,-50,40,40,]),'INTEGER':([10,12,50,53,54,55,56,64,65,70,75,97,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,128,136,137,175,192,193,194,195,196,197,198,],[45,45,45,45,-39,-40,-41,45,45,45,45,139,45,-68,-69,-63,-64,-65,-66,-67,-45,-46,-47,-48,-49,-50,45,-72,-73,-74,-75,-76,-77,45,45,153,177,200,-89,-90,-91,-92,-93,-94,]),'FLOAT':([10,12,50,53,54,55,56,64,65,70,75,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,128,136,],[46,46,46,46,-39,-40,-41,46,46,46,46,46,-68,-69,-63,-64,-65,-66,-67,-45,-46,-47,-48,-49,-50,46,-72,-73,-74,-75,-76,-77,46,46,]),'STRING':([10,12,48,49,50,53,54,55,56,62,64,65,70,75,105,106,107,108,109,110,111,112,113,114,115,116,117,118,128,134,136,],[47,47,71,72,47,47,-39,-40,-41,47,47,47,47,47,47,-68,-69,-63,-64,-65,-66,-67,-45,-46,-47,-48,-49,-50,47,47,47,]),'COMILLA_DOBLE':([10,12,50,53,54,55,56,62,64,65,70,71,75,105,106,107,108,109,110,111,112,113,114,115,116,117,118,128,134,136,],[48,48,48,48,-39,-40,-41,48,48,48,48,99,48,48,-68,-69,-63,-64,-65,-66,-67,-45,-46,-47,-48,-49,-50,48,48,48,]),'COMILLA_SIMPLE':([10,12,50,53,54,55,56,62,64,65,70,72,75,105,106,107,108,109,110,111,112,113,114,115,116,117,118,128,134,136,],[49,49,49,49,-39,-40,-41,49,49,49,49,100,49,49,-68,-69,-63,-64,-65,-66,-67,-45,-46,-47,-48,-49,-50,49,49,49,]),'ARROW':([13,14,],[-31,58,]),'EQUAL':([13,14,16,95,180,],[54,54,54,137,186,]),'PLUS_EQUAL':([13,14,16,],[55,55,55,]),'CONCAT_EQUAL':([13,14,16,],[56,56,56,]),'ENDLINE':([15,17,23,37,38,39,40,41,42,43,44,45,46,47,74,76,77,78,79,80,81,85,92,99,100,101,102,133,138,142,143,144,146,153,154,156,159,171,177,],[-43,-44,-42,69,-16,-17,-18,-19,-20,-21,-22,-70,-71,-23,102,104,119,-17,-59,-60,127,130,-61,-24,-25,141,-85,149,-30,-62,-78,-79,157,162,-33,164,166,-88,179,]),'COMA':([15,17,23,38,39,40,41,42,43,44,45,46,47,52,90,99,100,102,133,138,149,154,171,],[-43,-44,-42,-16,-17,-18,-19,-20,-21,-22,-70,-71,-23,75,134,-24,-25,-85,-80,-30,-81,-33,-88,]),'RPAREN':([15,17,23,38,39,40,41,42,43,44,45,46,47,51,52,73,79,80,89,91,92,93,96,98,99,100,102,103,129,131,138,139,142,143,144,145,150,152,154,171,181,184,185,188,189,200,],[-43,-44,-42,-16,-17,-18,-19,-20,-21,-22,-70,-71,-23,74,-87,101,-59,-60,133,135,-61,-17,138,140,-24,-25,-85,-86,146,147,-30,154,-62,-78,-79,156,159,161,-33,-88,187,-95,-97,-96,-98,-99,]),'BOOLEAN_AND':([15,17,23,38,39,40,41,42,43,44,45,46,47,76,78,92,93,99,100,102,138,154,171,],[-43,-44,-42,-16,-17,-18,-19,-20,-21,-22,-70,-71,-23,108,-17,108,-17,-24,-25,-85,-30,-33,-88,]),'BOOLEAN_OR':([15,17,23,38,39,40,41,42,43,44,45,46,47,76,78,92,93,99,100,102,138,154,171,],[-43,-44,-42,-16,-17,-18,-19,-20,-21,-22,-70,-71,-23,109,-17,109,-17,-24,-25,-85,-30,-33,-88,]),'AND':([15,17,23,38,39,40,41,42,43,44,45,46,47,76,78,92,93,99,100,102,138,154,171,],[-43,-44,-42,-16,-17,-18,-19,-20,-21,-22,-70,-71,-23,110,-17,110,-17,-24,-25,-85,-30,-33,-88,]),'OR':([15,17,23,38,39,40,41,42,43,44,45,46,47,76,78,92,93,99,100,102,138,154,171,],[-43,-44,-42,-16,-17,-18,-19,-20,-21,-22,-70,-71,-23,111,-17,111,-17,-24,-25,-85,-30,-33,-88,]),'XOR':([15,17,23,38,39,40,41,42,43,44,45,46,47,76,78,92,93,99,100,102,138,154,171,],[-43,-44,-42,-16,-17,-18,-19,-20,-21,-22,-70,-71,-23,112,-17,112,-17,-24,-25,-85,-30,-33,-88,]),'IS_EQUAL':([15,17,23,38,39,40,41,42,43,44,45,46,47,76,78,92,93,94,99,100,102,138,154,170,171,],[-43,-44,-42,-16,-17,-18,-19,-20,-21,-22,-70,-71,-23,113,-17,113,-17,113,-24,-25,-85,-30,-33,113,-88,]),'IS_GREATER_OR_EQUAL':([15,17,23,38,39,40,41,42,43,44,45,46,47,76,78,92,93,94,99,100,102,138,154,170,171,],[-43,-44,-42,-16,-17,-18,-19,-20,-21,-22,-70,-71,-23,114,-17,114,-17,114,-24,-25,-85,-30,-33,114,-88,]),'IS_NOT_EQUAL':([15,17,23,38,39,40,41,42,43,44,45,46,47,76,78,92,93,94,99,100,102,138,154,170,171,],[-43,-44,-42,-16,-17,-18,-19,-20,-21,-22,-70,-71,-23,115,-17,115,-17,115,-24,-25,-85,-30,-33,115,-88,]),'IS_SMALLER_OR_EQUAL':([15,17,23,38,39,40,41,42,43,44,45,46,47,76,78,92,93,94,99,100,102,138,154,170,171,],[-43,-44,-42,-16,-17,-18,-19,-20,-21,-22,-70,-71,-23,116,-17,116,-17,116,-24,-25,-85,-30,-33,116,-88,]),'IS_GREATER':([15,17,23,38,39,40,41,42,43,44,45,46,47,76,78,92,93,94,99,100,102,138,154,170,171,],[-43,-44,-42,-16,-17,-18,-19,-20,-21,-22,-70,-71,-23,117,-17,117,-17,117,-24,-25,-85,-30,-33,117,-88,]),'IS_SMALLER':([15,17,23,38,39,40,41,42,43,44,45,46,47,76,78,92,93,94,99,100,102,138,154,170,171,],[-43,-44,-42,-16,-17,-18,-19,-20,-21,-22,-70,-71,-23,118,-17,118,-17,118,-24,-25,-85,-30,-33,118,-88,]),'ELSE':([19,167,],[61,-57,]),'SPLQUEUE':([31,82,],[67,67,]),'SPLFIXEDARRAY':([31,86,],[68,68,]),'ADDITION':([45,46,78,93,143,190,],[-70,-71,121,121,121,193,]),'SUBTRACTION':([45,46,78,93,143,190,],[-70,-71,122,122,122,194,]),'MULTIPLICATION':([45,46,78,93,143,190,],[-70,-71,123,123,123,195,]),'DIVISION':([45,46,78,93,143,190,],[-70,-71,124,124,124,196,]),'MODULO':([45,46,78,93,143,190,],[-70,-71,125,125,125,197,]),'EXPONENTIATION':([45,46,78,93,143,190,],[-70,-71,126,126,126,198,]),'PUSH':([58,],[83,]),'POP':([58,],[84,]),'LKEY':([61,135,140,147,161,187,],[88,151,155,158,169,191,]),'COLON':([161,],[168,]),'TAB_VERTICAL':([169,],[174,]),'OPERADOR_INCREMENTO':([179,180,],[182,184,]),'OPERADOR_DECREMENTO':([179,180,],[183,185,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuerpo':([0,2,3,4,5,7,88,151,155,168,174,191,],[1,32,33,34,35,36,132,160,163,173,176,199,]),'salida':([0,2,3,4,5,7,88,151,155,168,174,191,],[2,2,2,2,2,2,2,2,2,2,2,2,]),'asignacion':([0,2,3,4,5,7,88,151,155,168,174,191,],[3,3,3,3,3,3,3,3,3,3,3,3,]),'function':([0,2,3,4,5,7,88,151,155,168,174,191,],[4,4,4,4,4,4,4,4,4,4,4,4,]),'estructuras_control':([0,2,3,4,5,7,88,151,155,168,174,191,],[5,5,5,5,5,5,5,5,5,5,5,5,]),'estructuras_datos':([0,2,3,4,5,7,10,12,50,53,64,65,70,75,88,105,128,136,151,155,168,174,191,],[6,6,6,6,6,6,43,43,43,43,43,43,43,43,6,43,43,43,6,6,6,6,6,]),'metodos':([0,2,3,4,5,7,88,151,155,168,174,191,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'abrir_archivo':([0,2,3,4,5,7,63,88,151,155,168,174,191,],[8,8,8,8,8,8,90,8,8,8,8,8,8,]),'lectura_archivo':([0,2,3,4,5,7,88,151,155,168,174,191,],[9,9,9,9,9,9,9,9,9,9,9,9,]),'queue_variable':([0,2,3,4,5,7,88,151,155,168,174,191,],[14,14,14,14,14,14,14,14,14,14,14,14,]),'queue':([0,2,3,4,5,7,10,12,50,53,57,64,65,70,75,88,105,128,136,151,155,168,174,191,],[15,15,15,15,15,15,15,15,15,15,81,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'splfixedarray_variable':([0,2,3,4,5,7,88,151,155,168,174,191,],[16,16,16,16,16,16,16,16,16,16,16,16,]),'splfixedarray':([0,2,3,4,5,7,10,12,50,53,59,64,65,70,75,88,105,128,136,151,155,168,174,191,],[17,17,17,17,17,17,17,17,17,17,85,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'if':([0,2,3,4,5,7,88,151,155,168,174,191,],[19,19,19,19,19,19,19,19,19,19,19,19,]),'else':([0,2,3,4,5,7,88,151,155,168,174,191,],[20,20,20,20,20,20,20,20,20,20,20,20,]),'while':([0,2,3,4,5,7,88,151,155,168,174,191,],[21,21,21,21,21,21,21,21,21,21,21,21,]),'for':([0,2,3,4,5,7,88,151,155,168,174,191,],[22,22,22,22,22,22,22,22,22,22,22,22,]),'array':([0,2,3,4,5,7,10,12,50,53,64,65,70,75,88,105,128,136,151,155,168,174,191,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'push':([0,2,3,4,5,7,88,151,155,168,174,191,],[24,24,24,24,24,24,24,24,24,24,24,24,]),'pop':([0,2,3,4,5,7,88,151,155,168,174,191,],[25,25,25,25,25,25,25,25,25,25,25,25,]),'valor':([10,12,50,53,64,65,70,75,105,128,136,],[37,52,73,76,92,94,98,52,92,145,152,]),'number':([10,12,50,53,64,65,70,75,105,120,128,136,],[39,39,39,78,93,39,39,39,39,143,39,39,]),'string':([10,12,50,53,62,64,65,70,75,105,128,134,136,],[41,41,41,41,89,41,41,41,41,41,41,150,41,]),'funciones':([10,12,50,53,64,65,70,75,105,128,136,],[44,44,44,44,44,44,44,44,44,44,44,]),'valorArreglo':([12,75,],[51,103,]),'operador_asignacion':([13,14,16,],[53,57,59,]),'expresion':([53,64,],[77,91,]),'expresiones_logicas':([53,64,105,],[79,79,142,]),'expresion_aritmetica':([53,64,120,],[80,80,144,]),'operador':([76,92,],[105,105,]),'operador_logico':([76,92,],[106,106,]),'operador_comparacion':([76,92,94,170,],[107,107,136,175,]),'operador_aritmetico':([78,93,143,],[120,120,120,]),'forma_operacion':([179,],[181,]),'tipo_operador':([190,],[192,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cuerpo","S'",1,None,None,None),
  ('cuerpo -> salida','cuerpo',1,'p_cuerpo','sintactico.py',35),
  ('cuerpo -> salida cuerpo','cuerpo',2,'p_cuerpo','sintactico.py',36),
  ('cuerpo -> asignacion','cuerpo',1,'p_cuerpo','sintactico.py',37),
  ('cuerpo -> asignacion cuerpo','cuerpo',2,'p_cuerpo','sintactico.py',38),
  ('cuerpo -> function','cuerpo',1,'p_cuerpo','sintactico.py',39),
  ('cuerpo -> function cuerpo','cuerpo',2,'p_cuerpo','sintactico.py',40),
  ('cuerpo -> estructuras_control','cuerpo',1,'p_cuerpo','sintactico.py',41),
  ('cuerpo -> estructuras_control cuerpo','cuerpo',2,'p_cuerpo','sintactico.py',42),
  ('cuerpo -> estructuras_datos','cuerpo',1,'p_cuerpo','sintactico.py',43),
  ('cuerpo -> metodos','cuerpo',1,'p_cuerpo','sintactico.py',44),
  ('cuerpo -> metodos cuerpo','cuerpo',2,'p_cuerpo','sintactico.py',45),
  ('cuerpo -> abrir_archivo','cuerpo',1,'p_cuerpo','sintactico.py',46),
  ('cuerpo -> lectura_archivo','cuerpo',1,'p_cuerpo','sintactico.py',47),
  ('salida -> ECHO valor ENDLINE','salida',3,'p_salida','sintactico.py',51),
  ('salida -> PRINT LPAREN valor RPAREN ENDLINE','salida',5,'p_salida_print','sintactico.py',56),
  ('valor -> ARGUMENTO','valor',1,'p_valor','sintactico.py',59),
  ('valor -> number','valor',1,'p_valor','sintactico.py',60),
  ('valor -> BOOLEAN','valor',1,'p_valor','sintactico.py',61),
  ('valor -> string','valor',1,'p_valor','sintactico.py',62),
  ('valor -> VARIABLE','valor',1,'p_valor','sintactico.py',63),
  ('valor -> estructuras_datos','valor',1,'p_valor','sintactico.py',64),
  ('valor -> funciones','valor',1,'p_valor','sintactico.py',65),
  ('string -> STRING','string',1,'p_string','sintactico.py',69),
  ('string -> COMILLA_DOBLE STRING COMILLA_DOBLE','string',3,'p_string','sintactico.py',70),
  ('string -> COMILLA_SIMPLE STRING COMILLA_SIMPLE','string',3,'p_string','sintactico.py',71),
  ('function -> FUNCTION ARGUMENTO LPAREN VARIABLE RPAREN LKEY ARGUMENTO RKEY','function',8,'p_function','sintactico.py',80),
  ('asignacion -> VARIABLE operador_asignacion valor ENDLINE','asignacion',4,'p_asignacion','sintactico.py',83),
  ('asignacion -> VARIABLE operador_asignacion expresion ENDLINE','asignacion',4,'p_asignacion_expresion','sintactico.py',86),
  ('asignacion -> queue_variable operador_asignacion queue ENDLINE','asignacion',4,'p_asignacion_queue','sintactico.py',89),
  ('queue -> NEW SPLQUEUE LPAREN RPAREN','queue',4,'p_queue','sintactico.py',92),
  ('queue_variable -> VARIABLE','queue_variable',1,'p_queue_variable','sintactico.py',96),
  ('asignacion -> splfixedarray_variable operador_asignacion splfixedarray ENDLINE','asignacion',4,'p_asignacion_splfixedarray','sintactico.py',101),
  ('splfixedarray -> NEW SPLFIXEDARRAY LPAREN INTEGER RPAREN','splfixedarray',5,'p_splfixedarray','sintactico.py',104),
  ('splfixedarray_variable -> VARIABLE','splfixedarray_variable',1,'p_splfixedarray_variable','sintactico.py',108),
  ('push -> queue_variable ARROW PUSH LPAREN valor RPAREN ENDLINE','push',7,'p_push','sintactico.py',112),
  ('pop -> queue_variable ARROW POP LPAREN RPAREN ENDLINE','pop',6,'p_pop','sintactico.py',115),
  ('metodos -> push','metodos',1,'p_metodos','sintactico.py',118),
  ('metodos -> pop','metodos',1,'p_metodos','sintactico.py',119),
  ('operador_asignacion -> EQUAL','operador_asignacion',1,'p_operador_asignacion','sintactico.py',122),
  ('operador_asignacion -> PLUS_EQUAL','operador_asignacion',1,'p_operador_asignacion','sintactico.py',123),
  ('operador_asignacion -> CONCAT_EQUAL','operador_asignacion',1,'p_operador_asignacion','sintactico.py',124),
  ('estructuras_datos -> array','estructuras_datos',1,'p_estructuras_datos','sintactico.py',127),
  ('estructuras_datos -> queue','estructuras_datos',1,'p_estructuras_datos','sintactico.py',128),
  ('estructuras_datos -> splfixedarray','estructuras_datos',1,'p_estructuras_datos','sintactico.py',129),
  ('operador_comparacion -> IS_EQUAL','operador_comparacion',1,'p_operador_comparacion','sintactico.py',132),
  ('operador_comparacion -> IS_GREATER_OR_EQUAL','operador_comparacion',1,'p_operador_comparacion','sintactico.py',133),
  ('operador_comparacion -> IS_NOT_EQUAL','operador_comparacion',1,'p_operador_comparacion','sintactico.py',134),
  ('operador_comparacion -> IS_SMALLER_OR_EQUAL','operador_comparacion',1,'p_operador_comparacion','sintactico.py',135),
  ('operador_comparacion -> IS_GREATER','operador_comparacion',1,'p_operador_comparacion','sintactico.py',136),
  ('operador_comparacion -> IS_SMALLER','operador_comparacion',1,'p_operador_comparacion','sintactico.py',137),
  ('operacion_comparacion -> VARIABLE operador_comparacion VARIABLE','operacion_comparacion',3,'p_operacion_comparacion','sintactico.py',142),
  ('estructuras_control -> if','estructuras_control',1,'p_estructuras_control','sintactico.py',145),
  ('estructuras_control -> else','estructuras_control',1,'p_estructuras_control','sintactico.py',146),
  ('estructuras_control -> while','estructuras_control',1,'p_estructuras_control','sintactico.py',147),
  ('estructuras_control -> for','estructuras_control',1,'p_estructuras_control','sintactico.py',148),
  ('estructuras_control -> estructuras_control','estructuras_control',1,'p_estructuras_control','sintactico.py',149),
  ('if -> IF LPAREN expresion RPAREN LKEY cuerpo RKEY','if',7,'p_if','sintactico.py',153),
  ('else -> if ELSE LKEY cuerpo RKEY','else',5,'p_else','sintactico.py',156),
  ('expresion -> expresiones_logicas','expresion',1,'p_expresion','sintactico.py',159),
  ('expresion -> expresion_aritmetica','expresion',1,'p_expresion','sintactico.py',160),
  ('expresiones_logicas -> valor','expresiones_logicas',1,'p_expresiones_logicas','sintactico.py',164),
  ('expresiones_logicas -> valor operador expresiones_logicas','expresiones_logicas',3,'p_expresiones_logicas','sintactico.py',165),
  ('operador_logico -> BOOLEAN_AND','operador_logico',1,'p_operador_logico','sintactico.py',169),
  ('operador_logico -> BOOLEAN_OR','operador_logico',1,'p_operador_logico','sintactico.py',170),
  ('operador_logico -> AND','operador_logico',1,'p_operador_logico','sintactico.py',171),
  ('operador_logico -> OR','operador_logico',1,'p_operador_logico','sintactico.py',172),
  ('operador_logico -> XOR','operador_logico',1,'p_operador_logico','sintactico.py',173),
  ('operador -> operador_logico','operador',1,'p_operador','sintactico.py',177),
  ('operador -> operador_comparacion','operador',1,'p_operador','sintactico.py',178),
  ('number -> INTEGER','number',1,'p_number','sintactico.py',181),
  ('number -> FLOAT','number',1,'p_number','sintactico.py',182),
  ('operador_aritmetico -> ADDITION','operador_aritmetico',1,'p_operador_aritmetico','sintactico.py',186),
  ('operador_aritmetico -> SUBTRACTION','operador_aritmetico',1,'p_operador_aritmetico','sintactico.py',187),
  ('operador_aritmetico -> MULTIPLICATION','operador_aritmetico',1,'p_operador_aritmetico','sintactico.py',188),
  ('operador_aritmetico -> DIVISION','operador_aritmetico',1,'p_operador_aritmetico','sintactico.py',189),
  ('operador_aritmetico -> MODULO','operador_aritmetico',1,'p_operador_aritmetico','sintactico.py',190),
  ('operador_aritmetico -> EXPONENTIATION','operador_aritmetico',1,'p_operador_aritmetico','sintactico.py',191),
  ('expresion_aritmetica -> number','expresion_aritmetica',1,'p_expresion_aritmetica','sintactico.py',195),
  ('expresion_aritmetica -> number operador_aritmetico expresion_aritmetica','expresion_aritmetica',3,'p_expresion_aritmetica','sintactico.py',196),
  ('abrir_archivo -> FOPEN LPAREN string RPAREN','abrir_archivo',4,'p_abrir_archivo','sintactico.py',205),
  ('abrir_archivo -> FOPEN LPAREN string RPAREN ENDLINE','abrir_archivo',5,'p_abrir_archivo','sintactico.py',206),
  ('lectura_archivo -> FSCANF LPAREN abrir_archivo COMA string RPAREN ENDLINE','lectura_archivo',7,'p_lectura_archivo','sintactico.py',216),
  ('while -> WHILE LPAREN valor operador_comparacion valor RPAREN COLON cuerpo','while',8,'p_while_v1','sintactico.py',223),
  ('while -> WHILE LPAREN valor operador_comparacion valor RPAREN LKEY TAB_VERTICAL cuerpo RKEY','while',10,'p_while_v2','sintactico.py',226),
  ('array -> LPAREN valorArreglo RPAREN ENDLINE','array',4,'p_array','sintactico.py',229),
  ('valorArreglo -> valor COMA valorArreglo','valorArreglo',3,'p_valorArreglo','sintactico.py',232),
  ('valorArreglo -> valor','valorArreglo',1,'p_valorArreglo','sintactico.py',233),
  ('funciones -> valor LPAREN valor RPAREN LKEY cuerpo RKEY','funciones',7,'p_funciones','sintactico.py',236),
  ('tipo_operador -> ADDITION','tipo_operador',1,'p_tipo_operador','sintactico.py',240),
  ('tipo_operador -> SUBTRACTION','tipo_operador',1,'p_tipo_operador','sintactico.py',241),
  ('tipo_operador -> MULTIPLICATION','tipo_operador',1,'p_tipo_operador','sintactico.py',242),
  ('tipo_operador -> DIVISION','tipo_operador',1,'p_tipo_operador','sintactico.py',243),
  ('tipo_operador -> MODULO','tipo_operador',1,'p_tipo_operador','sintactico.py',244),
  ('tipo_operador -> EXPONENTIATION','tipo_operador',1,'p_tipo_operador','sintactico.py',245),
  ('forma_operacion -> VARIABLE OPERADOR_INCREMENTO','forma_operacion',2,'p_forma_operacion','sintactico.py',250),
  ('forma_operacion -> OPERADOR_INCREMENTO VARIABLE','forma_operacion',2,'p_forma_operacion','sintactico.py',251),
  ('forma_operacion -> VARIABLE OPERADOR_DECREMENTO','forma_operacion',2,'p_forma_operacion','sintactico.py',252),
  ('forma_operacion -> OPERADOR_DECREMENTO VARIABLE','forma_operacion',2,'p_forma_operacion','sintactico.py',253),
  ('forma_operacion -> VARIABLE EQUAL VARIABLE tipo_operador INTEGER','forma_operacion',5,'p_forma_operacion','sintactico.py',254),
  ('for -> FOR LPAREN VARIABLE EQUAL INTEGER ENDLINE VARIABLE operador_comparacion INTEGER ENDLINE forma_operacion RPAREN LKEY cuerpo RKEY','for',15,'p_for','sintactico.py',259),
]
