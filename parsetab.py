
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADDITION ADVANCE_PAGE AND ARGUMENTO ARRAY ARROW BOOLEAN BOOLEAN_AND BOOLEAN_OR CLOSE_TAG COLON COMA COMILLA_DOBLE COMILLA_SIMPLE CONCAT_EQUAL DIVISION ECHO ELSE ENDLINE EQUAL ESCAPE EXPONENTIATION FGETS FLOAT FOPEN FOR FSCANF FUNCTION IDENTITY IF INTEGER IS_EQUAL IS_GREATER IS_GREATER_OR_EQUAL IS_NOT_EQUAL IS_SMALLER IS_SMALLER_OR_EQUAL LBRACKET LKEY LPAREN MODULO MULTIPLICATION NEGATION NEW NOT NULL OPEN_TAG OPERADOR_CONCATENACION OPERADOR_DECREMENTO OPERADOR_INCREMENTO OR PLUS_EQUAL POP PRINT PUSH RBRACKET READLINE RKEY RPAREN SETSIZE SINTAXIS_ARRAY SPLFIXEDARRAY SPLQUEUE STRING SUBTRACTION TAB_VERTICAL VARIABLE WHILE WHITESPACE XORcuerpo : salida \n  | salida cuerpo\n  | asignacion\n  | asignacion cuerpo \n  | function\n  | function cuerpo\n  | estructuras_control\n  | estructuras_control cuerpo\n  | metodos\n  | metodos cuerpo\n  | abrir_archivo\n  | lectura_archivosalida : ECHO valor ENDLINEsalida : PRINT LPAREN valor RPAREN ENDLINEvalor : ARGUMENTO \n  | number \n  | BOOLEAN\n  | string\n  | VARIABLE\n  | estructuras_datos\n  | funciones\n  | valorstring : STRING\n  | COMILLA_DOBLE STRING COMILLA_DOBLE\n  | COMILLA_SIMPLE STRING COMILLA_SIMPLEfunction : FUNCTION ARGUMENTO LPAREN VARIABLE RPAREN LKEY ARGUMENTO RKEYasignacion : VARIABLE operador_asignacion valor ENDLINEasignacion : VARIABLE operador_asignacion expresion ENDLINEasignacion : queue_variable operador_asignacion queue ENDLINEqueue : NEW SPLQUEUE LPAREN RPARENqueue_variable : VARIABLEpush : queue_variable ARROW PUSH LPAREN valor RPAREN ENDLINEpop : queue_variable ARROW POP LPAREN RPAREN ENDLINEmetodos : push\n  | popoperador_asignacion : EQUAL\n  | PLUS_EQUAL\n  | CONCAT_EQUALestructuras_datos : array\n  | queueoperador_comparacion : IS_EQUAL\n  | IS_GREATER_OR_EQUAL\n  | IS_NOT_EQUAL\n  | IS_SMALLER_OR_EQUAL\n  | IS_GREATER\n  | IS_SMALLERoperacion_comparacion : VARIABLE operador_comparacion VARIABLEestructuras_control : if\n  | else \n  | while \n  | for\n  | estructuras_controlif : IF LPAREN expresion RPAREN LKEY cuerpo RKEY else : if ELSE LKEY cuerpo RKEYexpresion : expresiones_logicas \n  | expresion_aritmetica\n  expresiones_logicas : valor\n  | valor operador expresiones_logicas\n  operador_logico : BOOLEAN_AND \n  | BOOLEAN_OR \n  | AND \n  | OR \n  | XOR \n  operador : operador_logico \n  | operador_comparacionnumber : INTEGER \n  | FLOAToperador_aritmetico : ADDITION\n  | SUBTRACTION\n  | MULTIPLICATION\n  | DIVISION\n  | MODULO\n  | EXPONENTIATION\n  expresion_aritmetica : number\n  | number operador_aritmetico expresion_aritmetica\n  abrir_archivo : FOPEN LPAREN string RPAREN\n  | FOPEN LPAREN string RPAREN ENDLINElectura_archivo : FGETS LPAREN abrir_archivo RPAREN ENDLINElectura : FGETS LPAREN VARIABLE COMA INTEGER RPAREN ENDLINE while : WHILE LPAREN valor operador_comparacion valor RPAREN COLON cuerpowhile : WHILE LPAREN valor operador_comparacion valor RPAREN LKEY TAB_VERTICAL cuerpo RKEYarray : LBRACKET valorArreglo RBRACKET ENDLINEvalorArreglo : valor COMA valorArreglo\n  | valorfunciones : valor LPAREN valor RPAREN LKEY cuerpo RKEYtipo_operador : ADDITION \n  | SUBTRACTION \n  | MULTIPLICATION \n  | DIVISION \n  | MODULO \n  | EXPONENTIATIONforma_operacion : VARIABLE OPERADOR_INCREMENTO \n  | OPERADOR_INCREMENTO VARIABLE \n  | VARIABLE OPERADOR_DECREMENTO \n  | OPERADOR_DECREMENTO VARIABLE \n  | VARIABLE EQUAL VARIABLE tipo_operador INTEGERfor : FOR LPAREN VARIABLE EQUAL INTEGER ENDLINE VARIABLE operador_comparacion INTEGER ENDLINE forma_operacion RPAREN LKEY cuerpo RKEY'
    
_lr_action_items = {'ECHO':([0,2,3,4,5,6,7,8,14,15,16,17,18,19,25,26,27,28,29,61,78,93,108,116,121,130,137,138,139,140,143,145,151,153,154,158,159,160,164,177,187,],[9,9,9,9,9,9,-11,-12,-48,-49,-50,-51,-34,-35,-2,-4,-6,-8,-10,-13,9,-27,-28,-29,-76,-14,-54,-77,-78,9,9,-33,-32,-53,9,-26,-80,9,-81,9,-97,]),'PRINT':([0,2,3,4,5,6,7,8,14,15,16,17,18,19,25,26,27,28,29,61,78,93,108,116,121,130,137,138,139,140,143,145,151,153,154,158,159,160,164,177,187,],[10,10,10,10,10,10,-11,-12,-48,-49,-50,-51,-34,-35,-2,-4,-6,-8,-10,-13,10,-27,-28,-29,-76,-14,-54,-77,-78,10,10,-33,-32,-53,10,-26,-80,10,-81,10,-97,]),'VARIABLE':([0,2,3,4,5,6,7,8,9,14,15,16,17,18,19,25,26,27,28,29,45,47,48,49,50,51,58,59,60,61,62,77,78,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,116,117,121,124,130,137,138,139,140,143,145,149,151,153,154,158,159,160,164,165,168,169,172,177,187,],[11,11,11,11,11,11,-11,-12,35,-48,-49,-50,-51,-34,-35,-2,-4,-6,-8,-10,35,35,35,-36,-37,-38,35,35,85,-13,35,119,11,35,-27,35,-64,-65,-59,-60,-61,-62,-63,-41,-42,-43,-44,-45,-46,-28,-29,35,-76,35,-14,-54,-77,-78,11,11,-33,156,-32,-53,11,-26,-80,11,-81,166,174,175,176,11,-97,]),'FUNCTION':([0,2,3,4,5,6,7,8,14,15,16,17,18,19,25,26,27,28,29,61,78,93,108,116,121,130,137,138,139,140,143,145,151,153,154,158,159,160,164,177,187,],[13,13,13,13,13,13,-11,-12,-48,-49,-50,-51,-34,-35,-2,-4,-6,-8,-10,-13,13,-27,-28,-29,-76,-14,-54,-77,-78,13,13,-33,-32,-53,13,-26,-80,13,-81,13,-97,]),'FOPEN':([0,2,3,4,5,6,7,8,14,15,16,17,18,19,25,26,27,28,29,57,61,78,93,108,116,121,130,137,138,139,140,143,145,151,153,154,158,159,160,164,177,187,],[20,20,20,20,20,20,-11,-12,-48,-49,-50,-51,-34,-35,-2,-4,-6,-8,-10,20,-13,20,-27,-28,-29,-76,-14,-54,-77,-78,20,20,-33,-32,-53,20,-26,-80,20,-81,20,-97,]),'FGETS':([0,2,3,4,5,6,7,8,14,15,16,17,18,19,25,26,27,28,29,61,78,93,108,116,121,130,137,138,139,140,143,145,151,153,154,158,159,160,164,177,187,],[21,21,21,21,21,21,-11,-12,-48,-49,-50,-51,-34,-35,-2,-4,-6,-8,-10,-13,21,-27,-28,-29,-76,-14,-54,-77,-78,21,21,-33,-32,-53,21,-26,-80,21,-81,21,-97,]),'IF':([0,2,3,4,5,6,7,8,14,15,16,17,18,19,25,26,27,28,29,61,78,93,108,116,121,130,137,138,139,140,143,145,151,153,154,158,159,160,164,177,187,],[22,22,22,22,22,22,-11,-12,-48,-49,-50,-51,-34,-35,-2,-4,-6,-8,-10,-13,22,-27,-28,-29,-76,-14,-54,-77,-78,22,22,-33,-32,-53,22,-26,-80,22,-81,22,-97,]),'WHILE':([0,2,3,4,5,6,7,8,14,15,16,17,18,19,25,26,27,28,29,61,78,93,108,116,121,130,137,138,139,140,143,145,151,153,154,158,159,160,164,177,187,],[23,23,23,23,23,23,-11,-12,-48,-49,-50,-51,-34,-35,-2,-4,-6,-8,-10,-13,23,-27,-28,-29,-76,-14,-54,-77,-78,23,23,-33,-32,-53,23,-26,-80,23,-81,23,-97,]),'FOR':([0,2,3,4,5,6,7,8,14,15,16,17,18,19,25,26,27,28,29,61,78,93,108,116,121,130,137,138,139,140,143,145,151,153,154,158,159,160,164,177,187,],[24,24,24,24,24,24,-11,-12,-48,-49,-50,-51,-34,-35,-2,-4,-6,-8,-10,-13,24,-27,-28,-29,-76,-14,-54,-77,-78,24,24,-33,-32,-53,24,-26,-80,24,-81,24,-97,]),'$end':([1,2,3,4,5,6,7,8,14,15,16,17,18,19,25,26,27,28,29,61,93,108,116,121,130,137,138,139,145,151,153,158,159,164,187,],[0,-1,-3,-5,-7,-9,-11,-12,-48,-49,-50,-51,-34,-35,-2,-4,-6,-8,-10,-13,-27,-28,-29,-76,-14,-54,-77,-78,-33,-32,-53,-26,-80,-81,-97,]),'RKEY':([2,3,4,5,6,7,8,14,15,16,17,18,19,25,26,27,28,29,61,93,108,116,120,121,130,137,138,139,145,147,150,151,152,153,158,159,162,164,185,187,],[-1,-3,-5,-7,-9,-11,-12,-48,-49,-50,-51,-34,-35,-2,-4,-6,-8,-10,-13,-27,-28,-29,137,-76,-14,-54,-77,-78,-33,153,157,-32,158,-53,-26,-80,164,-81,187,-97,]),'ARGUMENTO':([9,13,45,47,48,49,50,51,58,59,62,90,94,95,96,97,98,99,100,101,102,103,104,105,106,107,117,124,146,],[31,54,31,31,31,-36,-37,-38,31,31,31,31,31,-64,-65,-59,-60,-61,-62,-63,-41,-42,-43,-44,-45,-46,31,31,152,]),'BOOLEAN':([9,45,47,48,49,50,51,58,59,62,90,94,95,96,97,98,99,100,101,102,103,104,105,106,107,117,124,],[33,33,33,33,-36,-37,-38,33,33,33,33,33,-64,-65,-59,-60,-61,-62,-63,-41,-42,-43,-44,-45,-46,33,33,]),'INTEGER':([9,45,47,48,49,50,51,58,59,62,90,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,117,124,125,161,178,179,180,181,182,183,184,],[38,38,38,38,-36,-37,-38,38,38,38,38,38,-64,-65,-59,-60,-61,-62,-63,-41,-42,-43,-44,-45,-46,38,-68,-69,-70,-71,-72,-73,38,38,142,163,186,-86,-87,-88,-89,-90,-91,]),'FLOAT':([9,45,47,48,49,50,51,58,59,62,90,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,117,124,],[39,39,39,39,-36,-37,-38,39,39,39,39,39,-64,-65,-59,-60,-61,-62,-63,-41,-42,-43,-44,-45,-46,39,-68,-69,-70,-71,-72,-73,39,39,]),'STRING':([9,41,42,45,47,48,49,50,51,56,58,59,62,90,94,95,96,97,98,99,100,101,102,103,104,105,106,107,117,124,],[40,63,64,40,40,40,-36,-37,-38,40,40,40,40,40,40,-64,-65,-59,-60,-61,-62,-63,-41,-42,-43,-44,-45,-46,40,40,]),'COMILLA_DOBLE':([9,45,47,48,49,50,51,56,58,59,62,63,90,94,95,96,97,98,99,100,101,102,103,104,105,106,107,117,124,],[41,41,41,41,-36,-37,-38,41,41,41,41,87,41,41,-64,-65,-59,-60,-61,-62,-63,-41,-42,-43,-44,-45,-46,41,41,]),'COMILLA_SIMPLE':([9,45,47,48,49,50,51,56,58,59,62,64,90,94,95,96,97,98,99,100,101,102,103,104,105,106,107,117,124,],[42,42,42,42,-36,-37,-38,42,42,42,42,88,42,42,-64,-65,-59,-60,-61,-62,-63,-41,-42,-43,-44,-45,-46,42,42,]),'LBRACKET':([9,45,47,48,49,50,51,58,59,62,90,94,95,96,97,98,99,100,101,102,103,104,105,106,107,117,124,],[45,45,45,45,-36,-37,-38,45,45,45,45,45,-64,-65,-59,-60,-61,-62,-63,-41,-42,-43,-44,-45,-46,45,45,]),'NEW':([9,45,47,48,49,50,51,52,58,59,62,90,94,95,96,97,98,99,100,101,102,103,104,105,106,107,117,124,],[46,46,46,46,-36,-37,-38,46,46,46,46,46,46,-64,-65,-59,-60,-61,-62,-63,-41,-42,-43,-44,-45,-46,46,46,]),'LPAREN':([10,20,21,22,23,24,30,31,32,33,34,35,36,37,38,39,40,43,44,54,66,67,68,69,71,75,76,82,83,84,86,87,88,127,129,134,141,157,],[47,56,57,58,59,60,62,-15,-16,-17,-18,-19,-20,-21,-66,-67,-23,-39,-40,77,62,91,62,62,-16,117,118,62,-16,62,62,-24,-25,-82,-30,62,62,-85,]),'ARROW':([11,12,],[-31,53,]),'EQUAL':([11,12,85,166,],[49,49,125,172,]),'PLUS_EQUAL':([11,12,],[50,50,]),'CONCAT_EQUAL':([11,12,],[51,51,]),'ELSE':([14,153,],[55,-53,]),'ENDLINE':([30,31,32,33,34,35,36,37,38,39,40,43,44,69,70,71,72,73,74,82,87,88,89,92,121,122,127,129,131,132,133,135,142,144,157,163,],[61,-15,-16,-17,-18,-19,-20,-21,-66,-67,-23,-39,-40,93,108,-16,-55,-56,116,-22,-24,-25,127,130,138,139,-82,-30,-58,-74,-75,145,149,151,-85,165,]),'COMA':([31,32,33,34,35,36,37,38,39,40,43,44,66,87,88,127,129,157,],[-15,-16,-17,-18,-19,-20,-21,-66,-67,-23,-39,-40,90,-24,-25,-82,-30,-85,]),'RBRACKET':([31,32,33,34,35,36,37,38,39,40,43,44,65,66,87,88,127,128,129,157,],[-15,-16,-17,-18,-19,-20,-21,-66,-67,-23,-39,-40,89,-22,-24,-25,-82,-83,-30,-85,]),'RPAREN':([31,32,33,34,35,36,37,38,39,40,43,44,68,72,73,79,80,81,82,83,86,87,88,91,118,119,121,127,129,131,132,133,134,138,141,157,167,170,171,174,175,186,],[-15,-16,-17,-18,-19,-20,-21,-66,-67,-23,-39,-40,92,-55,-56,121,122,123,-22,-16,126,-24,-25,129,135,136,-76,-82,-30,-58,-74,-75,144,-77,148,-85,173,-92,-94,-93,-95,-96,]),'BOOLEAN_AND':([31,32,33,34,35,36,37,38,39,40,43,44,69,71,82,83,87,88,127,129,157,],[-15,-16,-17,-18,-19,-20,-21,-66,-67,-23,-39,-40,97,-16,97,-16,-24,-25,-82,-30,-85,]),'BOOLEAN_OR':([31,32,33,34,35,36,37,38,39,40,43,44,69,71,82,83,87,88,127,129,157,],[-15,-16,-17,-18,-19,-20,-21,-66,-67,-23,-39,-40,98,-16,98,-16,-24,-25,-82,-30,-85,]),'AND':([31,32,33,34,35,36,37,38,39,40,43,44,69,71,82,83,87,88,127,129,157,],[-15,-16,-17,-18,-19,-20,-21,-66,-67,-23,-39,-40,99,-16,99,-16,-24,-25,-82,-30,-85,]),'OR':([31,32,33,34,35,36,37,38,39,40,43,44,69,71,82,83,87,88,127,129,157,],[-15,-16,-17,-18,-19,-20,-21,-66,-67,-23,-39,-40,100,-16,100,-16,-24,-25,-82,-30,-85,]),'XOR':([31,32,33,34,35,36,37,38,39,40,43,44,69,71,82,83,87,88,127,129,157,],[-15,-16,-17,-18,-19,-20,-21,-66,-67,-23,-39,-40,101,-16,101,-16,-24,-25,-82,-30,-85,]),'IS_EQUAL':([31,32,33,34,35,36,37,38,39,40,43,44,69,71,82,83,84,87,88,127,129,156,157,],[-15,-16,-17,-18,-19,-20,-21,-66,-67,-23,-39,-40,102,-16,102,-16,102,-24,-25,-82,-30,102,-85,]),'IS_GREATER_OR_EQUAL':([31,32,33,34,35,36,37,38,39,40,43,44,69,71,82,83,84,87,88,127,129,156,157,],[-15,-16,-17,-18,-19,-20,-21,-66,-67,-23,-39,-40,103,-16,103,-16,103,-24,-25,-82,-30,103,-85,]),'IS_NOT_EQUAL':([31,32,33,34,35,36,37,38,39,40,43,44,69,71,82,83,84,87,88,127,129,156,157,],[-15,-16,-17,-18,-19,-20,-21,-66,-67,-23,-39,-40,104,-16,104,-16,104,-24,-25,-82,-30,104,-85,]),'IS_SMALLER_OR_EQUAL':([31,32,33,34,35,36,37,38,39,40,43,44,69,71,82,83,84,87,88,127,129,156,157,],[-15,-16,-17,-18,-19,-20,-21,-66,-67,-23,-39,-40,105,-16,105,-16,105,-24,-25,-82,-30,105,-85,]),'IS_GREATER':([31,32,33,34,35,36,37,38,39,40,43,44,69,71,82,83,84,87,88,127,129,156,157,],[-15,-16,-17,-18,-19,-20,-21,-66,-67,-23,-39,-40,106,-16,106,-16,106,-24,-25,-82,-30,106,-85,]),'IS_SMALLER':([31,32,33,34,35,36,37,38,39,40,43,44,69,71,82,83,84,87,88,127,129,156,157,],[-15,-16,-17,-18,-19,-20,-21,-66,-67,-23,-39,-40,107,-16,107,-16,107,-24,-25,-82,-30,107,-85,]),'ADDITION':([38,39,71,83,132,176,],[-66,-67,110,110,110,179,]),'SUBTRACTION':([38,39,71,83,132,176,],[-66,-67,111,111,111,180,]),'MULTIPLICATION':([38,39,71,83,132,176,],[-66,-67,112,112,112,181,]),'DIVISION':([38,39,71,83,132,176,],[-66,-67,113,113,113,182,]),'MODULO':([38,39,71,83,132,176,],[-66,-67,114,114,114,183,]),'EXPONENTIATION':([38,39,71,83,132,176,],[-66,-67,115,115,115,184,]),'SPLQUEUE':([46,],[67,]),'PUSH':([53,],[75,]),'POP':([53,],[76,]),'LKEY':([55,123,126,136,148,173,],[78,140,143,146,155,177,]),'COLON':([148,],[154,]),'TAB_VERTICAL':([155,],[160,]),'OPERADOR_INCREMENTO':([165,166,],[168,170,]),'OPERADOR_DECREMENTO':([165,166,],[169,171,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuerpo':([0,2,3,4,5,6,78,140,143,154,160,177,],[1,25,26,27,28,29,120,147,150,159,162,185,]),'salida':([0,2,3,4,5,6,78,140,143,154,160,177,],[2,2,2,2,2,2,2,2,2,2,2,2,]),'asignacion':([0,2,3,4,5,6,78,140,143,154,160,177,],[3,3,3,3,3,3,3,3,3,3,3,3,]),'function':([0,2,3,4,5,6,78,140,143,154,160,177,],[4,4,4,4,4,4,4,4,4,4,4,4,]),'estructuras_control':([0,2,3,4,5,6,78,140,143,154,160,177,],[5,5,5,5,5,5,5,5,5,5,5,5,]),'metodos':([0,2,3,4,5,6,78,140,143,154,160,177,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'abrir_archivo':([0,2,3,4,5,6,57,78,140,143,154,160,177,],[7,7,7,7,7,7,80,7,7,7,7,7,7,]),'lectura_archivo':([0,2,3,4,5,6,78,140,143,154,160,177,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'queue_variable':([0,2,3,4,5,6,78,140,143,154,160,177,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'if':([0,2,3,4,5,6,78,140,143,154,160,177,],[14,14,14,14,14,14,14,14,14,14,14,14,]),'else':([0,2,3,4,5,6,78,140,143,154,160,177,],[15,15,15,15,15,15,15,15,15,15,15,15,]),'while':([0,2,3,4,5,6,78,140,143,154,160,177,],[16,16,16,16,16,16,16,16,16,16,16,16,]),'for':([0,2,3,4,5,6,78,140,143,154,160,177,],[17,17,17,17,17,17,17,17,17,17,17,17,]),'push':([0,2,3,4,5,6,78,140,143,154,160,177,],[18,18,18,18,18,18,18,18,18,18,18,18,]),'pop':([0,2,3,4,5,6,78,140,143,154,160,177,],[19,19,19,19,19,19,19,19,19,19,19,19,]),'valor':([9,45,47,48,58,59,62,90,94,117,124,],[30,66,68,69,82,84,86,66,82,134,141,]),'number':([9,45,47,48,58,59,62,90,94,109,117,124,],[32,32,32,71,83,32,32,32,32,132,32,32,]),'string':([9,45,47,48,56,58,59,62,90,94,117,124,],[34,34,34,34,79,34,34,34,34,34,34,34,]),'estructuras_datos':([9,45,47,48,58,59,62,90,94,117,124,],[36,36,36,36,36,36,36,36,36,36,36,]),'funciones':([9,45,47,48,58,59,62,90,94,117,124,],[37,37,37,37,37,37,37,37,37,37,37,]),'array':([9,45,47,48,58,59,62,90,94,117,124,],[43,43,43,43,43,43,43,43,43,43,43,]),'queue':([9,45,47,48,52,58,59,62,90,94,117,124,],[44,44,44,44,74,44,44,44,44,44,44,44,]),'operador_asignacion':([11,12,],[48,52,]),'valorArreglo':([45,90,],[65,128,]),'expresion':([48,58,],[70,81,]),'expresiones_logicas':([48,58,94,],[72,72,131,]),'expresion_aritmetica':([48,58,109,],[73,73,133,]),'operador':([69,82,],[94,94,]),'operador_logico':([69,82,],[95,95,]),'operador_comparacion':([69,82,84,156,],[96,96,124,161,]),'operador_aritmetico':([71,83,132,],[109,109,109,]),'forma_operacion':([165,],[167,]),'tipo_operador':([176,],[178,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cuerpo","S'",1,None,None,None),
  ('cuerpo -> salida','cuerpo',1,'p_cuerpo','sintactico.py',30),
  ('cuerpo -> salida cuerpo','cuerpo',2,'p_cuerpo','sintactico.py',31),
  ('cuerpo -> asignacion','cuerpo',1,'p_cuerpo','sintactico.py',32),
  ('cuerpo -> asignacion cuerpo','cuerpo',2,'p_cuerpo','sintactico.py',33),
  ('cuerpo -> function','cuerpo',1,'p_cuerpo','sintactico.py',34),
  ('cuerpo -> function cuerpo','cuerpo',2,'p_cuerpo','sintactico.py',35),
  ('cuerpo -> estructuras_control','cuerpo',1,'p_cuerpo','sintactico.py',36),
  ('cuerpo -> estructuras_control cuerpo','cuerpo',2,'p_cuerpo','sintactico.py',37),
  ('cuerpo -> metodos','cuerpo',1,'p_cuerpo','sintactico.py',38),
  ('cuerpo -> metodos cuerpo','cuerpo',2,'p_cuerpo','sintactico.py',39),
  ('cuerpo -> abrir_archivo','cuerpo',1,'p_cuerpo','sintactico.py',40),
  ('cuerpo -> lectura_archivo','cuerpo',1,'p_cuerpo','sintactico.py',41),
  ('salida -> ECHO valor ENDLINE','salida',3,'p_salida','sintactico.py',45),
  ('salida -> PRINT LPAREN valor RPAREN ENDLINE','salida',5,'p_salida_print','sintactico.py',50),
  ('valor -> ARGUMENTO','valor',1,'p_valor','sintactico.py',53),
  ('valor -> number','valor',1,'p_valor','sintactico.py',54),
  ('valor -> BOOLEAN','valor',1,'p_valor','sintactico.py',55),
  ('valor -> string','valor',1,'p_valor','sintactico.py',56),
  ('valor -> VARIABLE','valor',1,'p_valor','sintactico.py',57),
  ('valor -> estructuras_datos','valor',1,'p_valor','sintactico.py',58),
  ('valor -> funciones','valor',1,'p_valor','sintactico.py',59),
  ('valor -> valor','valor',1,'p_valor','sintactico.py',60),
  ('string -> STRING','string',1,'p_string','sintactico.py',63),
  ('string -> COMILLA_DOBLE STRING COMILLA_DOBLE','string',3,'p_string','sintactico.py',64),
  ('string -> COMILLA_SIMPLE STRING COMILLA_SIMPLE','string',3,'p_string','sintactico.py',65),
  ('function -> FUNCTION ARGUMENTO LPAREN VARIABLE RPAREN LKEY ARGUMENTO RKEY','function',8,'p_function','sintactico.py',68),
  ('asignacion -> VARIABLE operador_asignacion valor ENDLINE','asignacion',4,'p_asignacion','sintactico.py',71),
  ('asignacion -> VARIABLE operador_asignacion expresion ENDLINE','asignacion',4,'p_asignacion_expresion','sintactico.py',74),
  ('asignacion -> queue_variable operador_asignacion queue ENDLINE','asignacion',4,'p_asignacion_queue','sintactico.py',77),
  ('queue -> NEW SPLQUEUE LPAREN RPAREN','queue',4,'p_queue','sintactico.py',80),
  ('queue_variable -> VARIABLE','queue_variable',1,'p_queue_variable','sintactico.py',84),
  ('push -> queue_variable ARROW PUSH LPAREN valor RPAREN ENDLINE','push',7,'p_push','sintactico.py',88),
  ('pop -> queue_variable ARROW POP LPAREN RPAREN ENDLINE','pop',6,'p_pop','sintactico.py',91),
  ('metodos -> push','metodos',1,'p_metodos','sintactico.py',94),
  ('metodos -> pop','metodos',1,'p_metodos','sintactico.py',95),
  ('operador_asignacion -> EQUAL','operador_asignacion',1,'p_operador_asignacion','sintactico.py',98),
  ('operador_asignacion -> PLUS_EQUAL','operador_asignacion',1,'p_operador_asignacion','sintactico.py',99),
  ('operador_asignacion -> CONCAT_EQUAL','operador_asignacion',1,'p_operador_asignacion','sintactico.py',100),
  ('estructuras_datos -> array','estructuras_datos',1,'p_estructuras_datos','sintactico.py',103),
  ('estructuras_datos -> queue','estructuras_datos',1,'p_estructuras_datos','sintactico.py',104),
  ('operador_comparacion -> IS_EQUAL','operador_comparacion',1,'p_operador_comparacion','sintactico.py',107),
  ('operador_comparacion -> IS_GREATER_OR_EQUAL','operador_comparacion',1,'p_operador_comparacion','sintactico.py',108),
  ('operador_comparacion -> IS_NOT_EQUAL','operador_comparacion',1,'p_operador_comparacion','sintactico.py',109),
  ('operador_comparacion -> IS_SMALLER_OR_EQUAL','operador_comparacion',1,'p_operador_comparacion','sintactico.py',110),
  ('operador_comparacion -> IS_GREATER','operador_comparacion',1,'p_operador_comparacion','sintactico.py',111),
  ('operador_comparacion -> IS_SMALLER','operador_comparacion',1,'p_operador_comparacion','sintactico.py',112),
  ('operacion_comparacion -> VARIABLE operador_comparacion VARIABLE','operacion_comparacion',3,'p_operacion_comparacion','sintactico.py',117),
  ('estructuras_control -> if','estructuras_control',1,'p_estructuras_control','sintactico.py',120),
  ('estructuras_control -> else','estructuras_control',1,'p_estructuras_control','sintactico.py',121),
  ('estructuras_control -> while','estructuras_control',1,'p_estructuras_control','sintactico.py',122),
  ('estructuras_control -> for','estructuras_control',1,'p_estructuras_control','sintactico.py',123),
  ('estructuras_control -> estructuras_control','estructuras_control',1,'p_estructuras_control','sintactico.py',124),
  ('if -> IF LPAREN expresion RPAREN LKEY cuerpo RKEY','if',7,'p_if','sintactico.py',128),
  ('else -> if ELSE LKEY cuerpo RKEY','else',5,'p_else','sintactico.py',131),
  ('expresion -> expresiones_logicas','expresion',1,'p_expresion','sintactico.py',134),
  ('expresion -> expresion_aritmetica','expresion',1,'p_expresion','sintactico.py',135),
  ('expresiones_logicas -> valor','expresiones_logicas',1,'p_expresiones_logicas','sintactico.py',139),
  ('expresiones_logicas -> valor operador expresiones_logicas','expresiones_logicas',3,'p_expresiones_logicas','sintactico.py',140),
  ('operador_logico -> BOOLEAN_AND','operador_logico',1,'p_operador_logico','sintactico.py',144),
  ('operador_logico -> BOOLEAN_OR','operador_logico',1,'p_operador_logico','sintactico.py',145),
  ('operador_logico -> AND','operador_logico',1,'p_operador_logico','sintactico.py',146),
  ('operador_logico -> OR','operador_logico',1,'p_operador_logico','sintactico.py',147),
  ('operador_logico -> XOR','operador_logico',1,'p_operador_logico','sintactico.py',148),
  ('operador -> operador_logico','operador',1,'p_operador','sintactico.py',152),
  ('operador -> operador_comparacion','operador',1,'p_operador','sintactico.py',153),
  ('number -> INTEGER','number',1,'p_number','sintactico.py',156),
  ('number -> FLOAT','number',1,'p_number','sintactico.py',157),
  ('operador_aritmetico -> ADDITION','operador_aritmetico',1,'p_operador_aritmetico','sintactico.py',161),
  ('operador_aritmetico -> SUBTRACTION','operador_aritmetico',1,'p_operador_aritmetico','sintactico.py',162),
  ('operador_aritmetico -> MULTIPLICATION','operador_aritmetico',1,'p_operador_aritmetico','sintactico.py',163),
  ('operador_aritmetico -> DIVISION','operador_aritmetico',1,'p_operador_aritmetico','sintactico.py',164),
  ('operador_aritmetico -> MODULO','operador_aritmetico',1,'p_operador_aritmetico','sintactico.py',165),
  ('operador_aritmetico -> EXPONENTIATION','operador_aritmetico',1,'p_operador_aritmetico','sintactico.py',166),
  ('expresion_aritmetica -> number','expresion_aritmetica',1,'p_expresion_aritmetica','sintactico.py',170),
  ('expresion_aritmetica -> number operador_aritmetico expresion_aritmetica','expresion_aritmetica',3,'p_expresion_aritmetica','sintactico.py',171),
  ('abrir_archivo -> FOPEN LPAREN string RPAREN','abrir_archivo',4,'p_abrir_archivo','sintactico.py',180),
  ('abrir_archivo -> FOPEN LPAREN string RPAREN ENDLINE','abrir_archivo',5,'p_abrir_archivo','sintactico.py',181),
  ('lectura_archivo -> FGETS LPAREN abrir_archivo RPAREN ENDLINE','lectura_archivo',5,'p_lectura_archivo','sintactico.py',191),
  ('lectura -> FGETS LPAREN VARIABLE COMA INTEGER RPAREN ENDLINE','lectura',7,'p_lectura','sintactico.py',197),
  ('while -> WHILE LPAREN valor operador_comparacion valor RPAREN COLON cuerpo','while',8,'p_while_v1','sintactico.py',202),
  ('while -> WHILE LPAREN valor operador_comparacion valor RPAREN LKEY TAB_VERTICAL cuerpo RKEY','while',10,'p_while_v2','sintactico.py',205),
  ('array -> LBRACKET valorArreglo RBRACKET ENDLINE','array',4,'p_array','sintactico.py',208),
  ('valorArreglo -> valor COMA valorArreglo','valorArreglo',3,'p_valorArreglo','sintactico.py',211),
  ('valorArreglo -> valor','valorArreglo',1,'p_valorArreglo','sintactico.py',212),
  ('funciones -> valor LPAREN valor RPAREN LKEY cuerpo RKEY','funciones',7,'p_funciones','sintactico.py',215),
  ('tipo_operador -> ADDITION','tipo_operador',1,'p_tipo_operador','sintactico.py',219),
  ('tipo_operador -> SUBTRACTION','tipo_operador',1,'p_tipo_operador','sintactico.py',220),
  ('tipo_operador -> MULTIPLICATION','tipo_operador',1,'p_tipo_operador','sintactico.py',221),
  ('tipo_operador -> DIVISION','tipo_operador',1,'p_tipo_operador','sintactico.py',222),
  ('tipo_operador -> MODULO','tipo_operador',1,'p_tipo_operador','sintactico.py',223),
  ('tipo_operador -> EXPONENTIATION','tipo_operador',1,'p_tipo_operador','sintactico.py',224),
  ('forma_operacion -> VARIABLE OPERADOR_INCREMENTO','forma_operacion',2,'p_forma_operacion','sintactico.py',229),
  ('forma_operacion -> OPERADOR_INCREMENTO VARIABLE','forma_operacion',2,'p_forma_operacion','sintactico.py',230),
  ('forma_operacion -> VARIABLE OPERADOR_DECREMENTO','forma_operacion',2,'p_forma_operacion','sintactico.py',231),
  ('forma_operacion -> OPERADOR_DECREMENTO VARIABLE','forma_operacion',2,'p_forma_operacion','sintactico.py',232),
  ('forma_operacion -> VARIABLE EQUAL VARIABLE tipo_operador INTEGER','forma_operacion',5,'p_forma_operacion','sintactico.py',233),
  ('for -> FOR LPAREN VARIABLE EQUAL INTEGER ENDLINE VARIABLE operador_comparacion INTEGER ENDLINE forma_operacion RPAREN LKEY cuerpo RKEY','for',15,'p_for','sintactico.py',238),
]
